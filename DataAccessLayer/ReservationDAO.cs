using BussinessObject;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataAccessLayer
{
    public class ReservationDAO
    {
        private static ReservationDAO instance;
        private readonly FuminiHotelManagementContext dbcontext;

        public ReservationDAO()
        {
            if (instance == null)
            {
                dbcontext = new FuminiHotelManagementContext();
            }
        }
        public static ReservationDAO Instance()
        {
            if (instance == null)
            {
                instance = new ReservationDAO();
            }
            return instance;
        }


        public List<BookingReservation> GetReservations()
        {
            var reservations = new List<BookingReservation>();
            try
            {
                reservations = dbcontext.BookingReservations.ToList();
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
            return reservations;
        }
        public List<BookingReservation> GetReservationByCustomerId(int customerId)
        {
            return dbcontext.BookingReservations.Where(r => r.CustomerId == customerId).Include(r=> r.BookingDetails).ToList();
        }


        public bool AddReservations(BookingReservation reservation, List<BookingDetail> bookingDetails)
        {
            if (reservation != null && bookingDetails != null && bookingDetails.Count > 0)
            {
                // Ensure the ID is not set explicitly
                //reservation.BookingReservationId = 0; // This ensures the ID is generated by the database

                dbcontext.BookingReservations.Add(reservation);
                dbcontext.SaveChanges(); // Save to generate the ID

                foreach (BookingDetail detail in bookingDetails)
                {
                    detail.BookingReservationId = reservation.BookingReservationId; // Set the foreign key
                    dbcontext.Entry(detail.Room).State = EntityState.Unchanged; // Ensure Room entity is not re-inserted
                    dbcontext.BookingDetails.Add(detail);
                }

                dbcontext.SaveChanges();
                return true;
            }
            return false;
        }




        public void UpdateBooking(BookingReservation bookingDTO)
        {
            using var db = new FuminiHotelManagementContext();
            var bookingReservation = db.BookingReservations
                .Where(b => bookingDTO.BookingReservationId == b.BookingReservationId).FirstOrDefault();
            bookingReservation.BookingStatus = 0;
            db.BookingReservations.Update(bookingReservation);
            db.SaveChangesAsync();
        }
    }
}
